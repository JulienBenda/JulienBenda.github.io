(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{198:function(n,e,t){"use strict";t.r(e);var r=t(80),o=t.n(r),c={data:function(){return{link:"step7",prekiji:"\n## GitHub Pages\n　この機能に関しては、以前の記事である程度説明しているが、改めてそして追加で重要な説明をしておく。\n\n> Source\nYour GitHub Pages site is currently being built from the master branch. Learn more.\nUser pages must be built from the master branch.\n\nつまり&lt;username&gt;.github.ioは__masterブランチにWEBページ構成ソースを配置する必要がある__ということである。\n\n　そして、__課金ユーザー__でないと__プライベートリポジトリでサイトは公開できない__。\n\nこの二点である。\n\n> 以前はmasterでなくても良かったかもしれないという記憶がある。興味ある各位は調べてみるとよい。\n\n## 作業用ブランチ作成\n\n　masterに最終的に生成される静的ファイルを置きたい。\nなので、コードを書くブランチは別に作成する。\n\n```bash\n$ git checkout -b pre\n```\n\n例えば私は「pre」というブランチを作ってみて作業している。\n\n## 必要なパッケージを追加\n\n　[公式ドキュメント](https://ja.nuxtjs.org/faq/github-pages/)に則って、必要なパッケージ__(cross-env, push-dir)__のインストール。\n```bash\nnpm install cross-env push-dir --save-dev\n```\n\n特に「push-dir」はdistディレクトリ配下のファイルを全て対象ブランチにプッシュできるもので、非常に便利である。\n\n## package.jsonにスクリプトを追加\n\n　公式ドキュメントと違って、masterブランチにdeployするので、少々書き換える必要がある。\n```json\n...\n  \"scripts\": {\n    \"dev\": \"nuxt\",\n    \"build\": \"nuxt build\",\n    \"start\": \"nuxt start\",\n    \"generate\": \"nuxt generate\",\n    \"build:master\": \"DEPLOY_ENV=MASTER nuxt build\",\n    \"generate:master\": \"DEPLOY_ENV=MASTER nuxt generate\",\n    \"deploy\": \"push-dir --dir=dist --branch=master --verbose --cleanup\",\n    \"clear-hard-source-cache\": \"rm -rf node_modules/.cache/hard-source/\"\n...\n```\n__\"clear-hard-source-cache\"__は基本機能に__HardSourceWebpackPlugin__があり、\nこれを有効にするとキャッシュによってビルド速度が格段に上がる。\nあるタイミングでキャッシュを削除するためのコマンドがこれである。\n以下に述べるが、\n\n```javascript\n...\nbuild: {\n    hardSource: true,\n...\n```\n\nこの値をtrueに設定することで有効となる。\n\n## nuxt.config.jsを修正\n\n```javascript\nexport default {\n    mode: 'universal',\n    /*\n     ** Headers of the page\n     */\n    env: {\n        baseUrl: process.env.BASE_URL || 'http://localhost:3000'\n    },\n    head: {\n        title: process.env.npm_package_name || '',\n        titleTemplate: 'CYBER LAB',\n        htmlAttrs: {\n            prefix: 'og: http://ogp.me/ns#',\n            lang: 'ja'\n        },\n        meta: [\n            { charset: 'utf-8' },\n            { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n            { name: 'google-site-verification', content: 'XXXXXXXXXXXXXXXXXXXXXXX' },\n            { name: 'theme-color', content: '#6495ED' },\n            { hid: 'description', name: 'description', content: process.env.npm_package_description || '' },\n            { hid: 'og:site_name', property: 'og:site_name', content: 'CYBER LAB' },\n            { hid: 'og:type', property: 'og:type', content: 'website' },\n            { hid: 'og:url', property: 'og:url', content: 'https://julienbenda.github.io' },\n            { hid: 'og:title', property: 'og:title', content: 'CYBER LAB' },\n            { hid: 'og:description', property: 'og:description', content: process.env.npm_package_description || '' },\n            { hid: 'og:image', property: 'og:image', content: 'https://julienbenda.github.io/js.jpg' },\n        ],\n        link: [\n            { rel: 'icon', type: 'image/x-icon', href: './favicon.ico?' }\n        ]\n    },\n    /*\n     ** Customize the progress-bar color\n     */\n    loading: { color: '#fff' },\n    /*\n     ** Global CSS\n     */\n    css: [\n        {src: '~/node_modules/highlight.js/styles/ir-black.css', lang: 'css'},\n    ],\n    /*\n     ** Plugins to load before mounting the App\n     */\n    plugins: [\n    ],\n    /*\n     ** Nuxt.js dev-modules\n     */\n    buildModules: [\n        '@nuxtjs/google-analytics'\n    ],\n    googleAnalytics: {\n        id: 'xxxxxxxxxxx'\n    },\n    /*\n     ** Nuxt.js modules\n     */\n    modules: [\n        '@nuxtjs/pwa',\n    ],\n    pwa: {\n        workbox: {\n            // workbox options\n            // 以下無駄、gh-pagesのcache ttlは10mで一律変更不能\n            offline: false,\n            skipWaiting: true,\n            clientsClaim: true,\n            runtimeCaching: [\n                {\n                    urlPattern: '/_nuxt/',\n                    // handler: 'staleWhileRevalidate',\n                    handler: 'CacheFirst',\n                    method: 'GET',\n                    strategyOptions: {\n                        cacheExpiration: {\n                            maxAgeSeconds: 60 * 60 * 24 * 60, // 60日\n                        },\n                        cacheableResponse: {\n                            statuses: [200],\n                        },\n                    },\n                },\n                {\n                    // デフォルト（最後に記述する）\n                    urlPattern: '/*',\n                    handler: 'networkFirst',\n                    method: 'GET',\n                },\n            ],\n        }\n    },\n    manifest: {\n        name: \"CYBER LAB\",\n        lang: 'ja',\n    },\n    /*\n     ** Build configuration\n     */\n    build: {\n        hardSource: true,\n        /*\n         ** You can extend webpack config here\n         */\n        extend (config, ctx) {\n        }\n    }\n}\n```\n\n以上はあくまで、一例としてあげているだけで、絶対的とはまだ確信が持てていない。\n依存パッケージもあるので、このままやるとエラーが出る。一応調べてみてほしい。\n後の記事である程度説明はしたい。\n\n## 終わり\n　サラッと説明したが、凄まじく悩むことはたくさんあった。\nしかし、エラーログや、ググることでやっとここまでこられた。\nプログラマで最も必要な能力の一つにググり力を挙げたい。\n"}},computed:{kiji:function(){return o()(this.prekiji)}},components:{DefaultArticle:function(){return t.e(0).then(t.bind(null,204))}}},l=t(21),component=Object(l.a)(c,(function(){var n=this.$createElement,e=this._self._c||n;return e("div",[e("DefaultArticle",{attrs:{content:{link:this.link,kiji:this.kiji}}})],1)}),[],!1,null,null,null);e.default=component.exports}}]);
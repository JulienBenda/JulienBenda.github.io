(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{192:function(n,t,e){"use strict";e.r(t);var r=e(80),l=e.n(r),o={data:function(){return{link:"step10",prekiji:"\n## 最終段階\n　ついにここまで来た。GitHub Pagesにサイトを公開してみる。\n\n　おっとその前に、公開する前に一つポリシーの話をするが、\nポリシーとしてはpagesにどんどんページを作成していき(そのままの意味)、\n使い回す部品的部分は、componentsで定義して使いまわしていくというスタンスが良いと思う。\nそして、単一コンポーネントではあるが、同じクラス名同じ内容のスタイルをあちこちで散見させられると、\n流石に鬱陶しくて苛立ってくるので、私の場合は、__「../layouts/default.vue」__に基本的なスタイルのクラスは記述し、\nタグ内のstyleにて、既存のスタイルを上書きして表示するスタンスを取っている。\n\n　上のことを踏まえて公開しようと思ったとする。\n私はもう面倒くさかったので、以下のShellスクリプトを書いた\n```bash　\ngit add --all && git commit -m jidou && git push && npm run generate && npm run deploy\n```\n\npreリポジトリの変更をコミットして、リモートを更新。\n__「npm run generate」__でdist直下に静的ファイルを作成。\nそれから__「npm run deploy」__でdistの中身だけをリモートのmasterに更新。\n\n　これで完了！\n\n## 終わり\n\n　あとはhttps://&lt;username&gt;.github.ioにアクセスして、実際に見てみるといい。\n初めてだったら感動すると思う。なぜなら、非常に苦労して、WordPressとかとは異なり、\n実際にコードを書いているわけだから、あんな絵日記みたいなものとは達成感が違う筈であろうからである。\n"}},computed:{kiji:function(){return l()(this.prekiji)}},components:{DefaultArticle:function(){return e.e(0).then(e.bind(null,204))}}},c=e(21),component=Object(c.a)(o,(function(){var n=this.$createElement,t=this._self._c||n;return t("div",[t("DefaultArticle",{attrs:{content:{link:this.link,kiji:this.kiji}}})],1)}),[],!1,null,null,null);t.default=component.exports}}]);